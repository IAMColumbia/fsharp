* FSharp notes

** Basics
*** Variables, Functions.. both?
F# is a functional language. Its often joked that _everything_ is an object in c#. IF that joke was made about f# it would be "everything is a function". So when we go to define a variable, which is commonplace in every language, it gets a little bit extra spicy in F#. Variables, under the hood, are functions. Below is the f# equivalent of \(f() = 10\)
#+BEGIN_SRC fsharp
let x = 10
#+END_SRC
Calling function 'x' returns 10. `x` is immutable, meaning it will always return 10 and cannot be changed. This makes sense if we think of it as a function, functions cannot be reassigned and you cant have 2 with the same signature. If we need a variable that can be changed, which is rarer than you think, you have to use the "mutable" keyword
#+BEGIN_SRC fsharp
let mutable x = 10
x <- x + 1
#+END_SRC
*** Functions
Defining a function in F# is the same as defining a variable, since as discussed above, they are essentially the same thing.
#+BEGIN_SRC fsharp
let square x = x * x
#+END_SRC

You will find function definitions are very close to your math function notation \(f(x) = x*x\).


** Simple program

** Lets do the internet

** Data?

** Dockerizing everything
